
> db.test1.find()
{ "_id" : ObjectId("61aecc409d90882b3b6fc693"), "name" : "coutamg", "age" : 11, "male" : 1 }
{ "_id" : ObjectId("61aecc489d90882b3b6fc694"), "name" : "coutamg1", "age" : 12, "male" : 1 }
{ "_id" : ObjectId("61aecc549d90882b3b6fc695"), "name" : "coutamg2", "age" : 13, "male" : 0 }
{ "_id" : ObjectId("61aecc6d9d90882b3b6fc696"), "name" : "coutamg3", "age" : 123, "male" : 0, "xx" : 21 }



> db.test1.getIndexes()
[
	{
		"v" : 2,
		"key" : {
			"_id" : 1
		},
		"name" : "_id_",
		"ns" : "test.test1"
	},
	{
		"v" : 2,
		"key" : {
			"name" : 1
		},
		"name" : "name_1",
		"ns" : "test.test1"
	},
	{
		"v" : 2,
		"key" : {
			"age" : 1
		},
		"name" : "age_1",
		"ns" : "test.test1"
	}
]




2021-12-07T11:26:07.155+0800 D COMMAND  [conn-1] run command test.$cmd { find: "test1", filter: { name: "coutamg1", age: 12.0 }, sort: { name: 1.0 }, $db: "test" } find
2021-12-07T11:26:07.156+0800 I COMMAND  [conn-1] ddd test ............ initializeOperationSessionInfo txn number:
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test StatusWithMatchExpression parse not-isExpressionDocument name: name, obj: name: "coutamg1"
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test name: name, ele: name: "coutamg1"
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test StatusWithMatchExpression parse not-isExpressionDocument name: age, obj: age: 12.0
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test name: age, ele: age: 12.0
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test root expression:$and
    name == "coutamg1"
    age == 12.0
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test canonicalize::expression: $and
    name == "coutamg1"
    age == 12.0
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test canonicalize::CanonicalQuery: ns=test.test1Tree: $and
    age == 12.0
    name == "coutamg1"
Sort: { name: 1.0 }
Proj: {}
2021-12-07T11:26:07.156+0800 D STORAGE  [conn-1] NamespaceUUIDCache: registered namespace test.test1 with UUID b6412db3-c1e9-4007-bd5b-2683b2a708f5
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test find::expression: query: { name: "coutamg1", age: 12.0 } sort: { name: 1.0 } projection: {}
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test prepareExecution::CanonicalQuery: query: { name: "coutamg1", age: 12.0 } sort: { name: 1.0 } projection: {}
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test IndexEntry: kp: { _id: 1 } unique name: '_id_' io: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.test1" }
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test IndexEntry: kp: { name: 1.0 } name: 'name_1' io: { v: 2, key: { name: 1.0 }, name: "name_1", ns: "test.test1" }
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test IndexEntry: kp: { age: 1.0 } name: 'age_1' io: { v: 2, key: { age: 1.0 }, name: "age_1", ns: "test.test1" }
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] Beginning planning...
=============================
Options = INDEX_INTERSECTION SPLIT_LIMITED_SORT CANNOT_TRIM_IXISECT
Canonical query:
ns=test.test1Tree: $and
    age == 12.0
    name == "coutamg1"
Sort: { name: 1.0 }
Proj: {}
=============================
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] Index 0 is kp: { _id: 1 } unique name: '_id_' io: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.test1" }
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] Index 0 is kp:kp: { _id: 1 } unique name: '_id_' io: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.test1" }
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] Index 1 is kp: { name: 1.0 } name: 'name_1' io: { v: 2, key: { name: 1.0 }, name: "name_1", ns: "test.test1" }
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] Index 1 is kp:kp: { name: 1.0 } name: 'name_1' io: { v: 2, key: { name: 1.0 }, name: "name_1", ns: "test.test1" }
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] Index 2 is kp: { age: 1.0 } name: 'age_1' io: { v: 2, key: { age: 1.0 }, name: "age_1", ns: "test.test1" }
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] Index 2 is kp:kp: { age: 1.0 } name: 'age_1' io: { v: 2, key: { age: 1.0 }, name: "age_1", ns: "test.test1" }
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] Predicate over field 'name'
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] Predicate over field 'age'
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] Relevant index 0 is kp: { name: 1.0 } name: 'name_1' io: { v: 2, key: { name: 1.0 }, name: "name_1", ns: "test.test1" }
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] Relevant index 1 is kp: { age: 1.0 } name: 'age_1' io: { v: 2, key: { age: 1.0 }, name: "age_1", ns: "test.test1" }
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test rateIndices node: $and
    age == 12.0
    name == "coutamg1"
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test rateIndices kLogical getCategory node
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test rateIndices node: age == 12.0
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test rateIndices isBoundsGenerating node: age == 12.0
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test rateIndices node: name == "coutamg1"
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] ddd test rateIndices isBoundsGenerating node: name == "coutamg1"
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] Rated tree:
$and
    age == 12.0  || First: 1 notFirst: full path: age
    name == "coutamg1"  || First: 0 notFirst: full path: name
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] About to build solntree(QuerySolution tree) from tagged tree:
$and
    age == 12.0
    name == "coutamg1"  || Selected Index #0 pos 0 combine 1
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] About to build solntree(QuerySolution tree) from tagged tree, after prepareForAccessPlanning:
$and
    name == "coutamg1"  || Selected Index #0 pos 0 combine 1
    age == 12.0
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] Planner: adding QuerySolutionNode:
FETCH
---filter:
        age == 12.0
---fetched = 1
---sortedByDiskLoc = 1
---getSort = []
---Child:
------IXSCAN
---------indexName = name_1
keyPattern = { name: 1.0 }
---------direction = 1
---------bounds = field #0['name']: ["coutamg1", "coutamg1"]
---------fetched = 0
---------sortedByDiskLoc = 1
---------getSort = []
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] Planner: adding solution:
FETCH
---filter:
        age == 12.0
---fetched = 1
---sortedByDiskLoc = 1
---getSort = [{ name: 1 }, ]
---Child:
------IXSCAN
---------indexName = name_1
keyPattern = { name: 1.0 }
---------direction = 1
---------bounds = field #0['name']: ["coutamg1", "coutamg1"]
---------fetched = 0
---------sortedByDiskLoc = 1
---------getSort = [{ name: 1 }, ]
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] About to build solntree(QuerySolution tree) from tagged tree:
$and
    age == 12.0  || Selected Index #1 pos 0 combine 1
    name == "coutamg1"
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] About to build solntree(QuerySolution tree) from tagged tree, after prepareForAccessPlanning:
$and
    age == 12.0  || Selected Index #1 pos 0 combine 1
    name == "coutamg1"
2021-12-07T11:26:07.156+0800 D QUERY    [conn-1] Planner: adding QuerySolutionNode:
FETCH
---filter:
        name == "coutamg1"
---fetched = 1
---sortedByDiskLoc = 1
---getSort = []
---Child:
------IXSCAN
---------indexName = age_1
keyPattern = { age: 1.0 }
---------direction = 1
---------bounds = field #0['age']: [12.0, 12.0]
---------fetched = 0
---------sortedByDiskLoc = 1
---------getSort = []
2021-12-07T11:26:07.157+0800 D QUERY    [conn-1] Planner: adding solution:
SORT
---pattern = { name: 1.0 }
---limit = 0
---fetched = 1
---sortedByDiskLoc = 0
---getSort = []
---Child:
------SORT_KEY_GENERATOR
---------sortSpec = { name: 1.0 }
---------fetched = 1
---------sortedByDiskLoc = 1
---------getSort = [{ age: 1 }, ]
---------Child:
------------FETCH
---------------filter:
                        name == "coutamg1"
---------------fetched = 1
---------------sortedByDiskLoc = 1
---------------getSort = [{ age: 1 }, ]
---------------Child:
------------------IXSCAN
---------------------indexName = age_1
keyPattern = { age: 1.0 }
---------------------direction = 1
---------------------bounds = field #0['age']: [12.0, 12.0]
---------------------fetched = 0
---------------------sortedByDiskLoc = 1
---------------------getSort = [{ age: 1 }, ]
2021-12-07T11:26:07.157+0800 D QUERY    [conn-1] About to build solntree(QuerySolution tree) from tagged tree:
$and
    age == 12.0  || Selected Index #1 pos 0 combine 1
    name == "coutamg1"  || Selected Index #0 pos 0 combine 1
2021-12-07T11:26:07.157+0800 D QUERY    [conn-1] About to build solntree(QuerySolution tree) from tagged tree, after prepareForAccessPlanning:
$and
    name == "coutamg1"  || Selected Index #0 pos 0 combine 1
    age == 12.0  || Selected Index #1 pos 0 combine 1
2021-12-07T11:26:07.157+0800 D QUERY    [conn-1] Planner: adding QuerySolutionNode:
FETCH
---filter:
        $and
            name == "coutamg1"  || Selected Index #0 pos 0 combine 1
            age == 12.0  || Selected Index #1 pos 0 combine 1
---fetched = 1
---sortedByDiskLoc = 1
---getSort = []
---Child:
------AND_SORTED
---------fetched = 0
---------sortedByDiskLoc = 1
---------getSort = []
---------Child 0:
---------IXSCAN
------------indexName = name_1
keyPattern = { name: 1.0 }
------------direction = 1
------------bounds = field #0['name']: ["coutamg1", "coutamg1"]
------------fetched = 0
------------sortedByDiskLoc = 1
------------getSort = []
---------Child 1:
---------IXSCAN
------------indexName = age_1
keyPattern = { age: 1.0 }
------------direction = 1
------------bounds = field #0['age']: [12.0, 12.0]
------------fetched = 0
------------sortedByDiskLoc = 1
------------getSort = []
2021-12-07T11:26:07.157+0800 D QUERY    [conn-1] Planner: adding solution:
SORT
---pattern = { name: 1.0 }
---limit = 0
---fetched = 1
---sortedByDiskLoc = 0
---getSort = []
---Child:
------SORT_KEY_GENERATOR
---------sortSpec = { name: 1.0 }
---------fetched = 1
---------sortedByDiskLoc = 1
---------getSort = []
---------Child:
------------FETCH
---------------filter:
                        $and
                            name == "coutamg1"  || Selected Index #0 pos 0 combine 1
                            age == 12.0  || Selected Index #1 pos 0 combine 1
---------------fetched = 1
---------------sortedByDiskLoc = 1
---------------getSort = []
---------------Child:
------------------AND_SORTED
---------------------fetched = 0
---------------------sortedByDiskLoc = 1
---------------------getSort = []
---------------------Child 0:
---------------------IXSCAN
------------------------indexName = name_1
keyPattern = { name: 1.0 }
------------------------direction = 1
------------------------bounds = field #0['name']: ["coutamg1", "coutamg1"]
------------------------fetched = 0
------------------------sortedByDiskLoc = 1
------------------------getSort = [{ name: 1 }, ]
---------------------Child 1:
---------------------IXSCAN
------------------------indexName = age_1
keyPattern = { age: 1.0 }
------------------------direction = 1
------------------------bounds = field #0['age']: [12.0, 12.0]
------------------------fetched = 0
------------------------sortedByDiskLoc = 1
------------------------getSort = [{ age: 1 }, ]
2021-12-07T11:26:07.157+0800 D QUERY    [conn-1] Planner: outputted 3 indexed solutions.
2021-12-07T11:26:07.157+0800 D QUERY    [conn-1] ddd test prepareExecution::QuerySolution :0, FETCH
---filter:
        age == 12.0
---fetched = 1
---sortedByDiskLoc = 1
---getSort = [{ name: 1 }, ]
---Child:
------IXSCAN
---------indexName = name_1
keyPattern = { name: 1.0 }
---------direction = 1
---------bounds = field #0['name']: ["coutamg1", "coutamg1"]
---------fetched = 0
---------sortedByDiskLoc = 1
---------getSort = [{ name: 1 }, ]
2021-12-07T11:26:07.157+0800 D QUERY    [conn-1] ddd test prepareExecution::QuerySolution :1, SORT
---pattern = { name: 1.0 }
---limit = 0
---fetched = 1
---sortedByDiskLoc = 0
---getSort = []
---Child:
------SORT_KEY_GENERATOR
---------sortSpec = { name: 1.0 }
---------fetched = 1
---------sortedByDiskLoc = 1
---------getSort = [{ age: 1 }, ]
---------Child:
------------FETCH
---------------filter:
                        name == "coutamg1"
---------------fetched = 1
---------------sortedByDiskLoc = 1
---------------getSort = [{ age: 1 }, ]
---------------Child:
------------------IXSCAN
---------------------indexName = age_1
keyPattern = { age: 1.0 }
---------------------direction = 1
---------------------bounds = field #0['age']: [12.0, 12.0]
---------------------fetched = 0
---------------------sortedByDiskLoc = 1
---------------------getSort = [{ age: 1 }, ]
2021-12-07T11:26:07.157+0800 D QUERY    [conn-1] ddd test prepareExecution::QuerySolution :2, SORT
---pattern = { name: 1.0 }
---limit = 0
---fetched = 1
---sortedByDiskLoc = 0
---getSort = []
---Child:
------SORT_KEY_GENERATOR
---------sortSpec = { name: 1.0 }
---------fetched = 1
---------sortedByDiskLoc = 1
---------getSort = []
---------Child:
------------FETCH
---------------filter:
                        $and
                            name == "coutamg1"  || Selected Index #0 pos 0 combine 1
                            age == 12.0  || Selected Index #1 pos 0 combine 1
---------------fetched = 1
---------------sortedByDiskLoc = 1
---------------getSort = []
---------------Child:
------------------AND_SORTED
---------------------fetched = 0
---------------------sortedByDiskLoc = 1
---------------------getSort = []
---------------------Child 0:
---------------------IXSCAN
------------------------indexName = name_1
keyPattern = { name: 1.0 }
------------------------direction = 1
------------------------bounds = field #0['name']: ["coutamg1", "coutamg1"]
------------------------fetched = 0
------------------------sortedByDiskLoc = 1
------------------------getSort = [{ name: 1 }, ]
---------------------Child 1:
---------------------IXSCAN
------------------------indexName = age_1
keyPattern = { age: 1.0 }
------------------------direction = 1
------------------------bounds = field #0['age']: [12.0, 12.0]
------------------------fetched = 0
------------------------sortedByDiskLoc = 1
------------------------getSort = [{ age: 1 }, ]
2021-12-07T11:26:07.158+0800 I STORAGE  [conn-1] WT index (0x7f58188eed00) setEndPosition inclusive: 1 { : "coutamg1" }
2021-12-07T11:26:07.158+0800 I STORAGE  [conn-1] WT index (0x7f58188eed00) 	 cmp: -1
2021-12-07T11:26:07.158+0800 I STORAGE  [conn-1] WT index (0x7f58188eed80) setEndPosition inclusive: 1 { : 12.0 }
2021-12-07T11:26:07.158+0800 I STORAGE  [conn-1] WT index (0x7f58188eed80) 	 cmp: -1
2021-12-07T11:26:07.158+0800 I STORAGE  [conn-1] WT index (0x7f58188eed00) setEndPosition inclusive: 1 { : "coutamg1" }
2021-12-07T11:26:07.158+0800 I STORAGE  [conn-1] WT index (0x7f58188eed00) 	 cmp: -1
2021-12-07T11:26:07.158+0800 D QUERY    [conn-1] Scoring query plan: IXSCAN { name: 1 } planHitEOF=1
2021-12-07T11:26:07.158+0800 D QUERY    [conn-1] score(1.5003) = baseScore(1) + productivity((1 advanced)/(2 works) = 0.5) + tieBreakers(0.0001 noFetchBonus + 0.0001 noSortBonus + 0.0001 noIxisectBonus = 0.0003)
2021-12-07T11:26:07.158+0800 D QUERY    [conn-1] Scoring query plan: IXSCAN { age: 1 } planHitEOF=0
2021-12-07T11:26:07.158+0800 D QUERY    [conn-1] score(1.0002) = baseScore(1) + productivity((0 advanced)/(2 works) = 0) + tieBreakers(0.0001 noFetchBonus + 0 noSortBonus + 0.0001 noIxisectBonus = 0.0002)
2021-12-07T11:26:07.158+0800 D QUERY    [conn-1] Scoring query plan: IXSCAN { name: 1 }, IXSCAN { age: 1 } planHitEOF=0
2021-12-07T11:26:07.158+0800 D QUERY    [conn-1] score(1.0001) = baseScore(1) + productivity((0 advanced)/(2 works) = 0) + tieBreakers(0.0001 noFetchBonus + 0 noSortBonus + 0 noIxisectBonus = 0.0001)
2021-12-07T11:26:07.158+0800 D QUERY    [conn-1] Winning solution:
FETCH
---filter:
        age == 12.0
---fetched = 1
---sortedByDiskLoc = 1
---getSort = [{ name: 1 }, ]
---Child:
------IXSCAN
---------indexName = name_1
keyPattern = { name: 1.0 }
---------direction = 1
---------bounds = field #0['name']: ["coutamg1", "coutamg1"]
---------fetched = 0
---------sortedByDiskLoc = 1
---------getSort = [{ name: 1 }, ]
2021-12-07T11:26:07.158+0800 D QUERY    [conn-1] Winning plan: IXSCAN { name: 1 }
2021-12-07T11:26:07.158+0800 D QUERY    [conn-1] ddd test ...PlanStage::StageState MultiPlanStage::doWork
2021-12-07T11:26:07.158+0800 I QUERY    [conn-1] ddd test....FindCmd::run,OBJ:{ _id: ObjectId('61aecc489d90882b3b6fc694'), name: "coutamg1", age: 12.0, male: 1.0 }
2021-12-07T11:26:07.158+0800 D QUERY    [conn-1] ddd test ...PlanStage::StageState MultiPlanStage::doWork
2021-12-07T11:26:07.158+0800 I COMMAND  [conn-1] command test.test1 appName: "MongoDB Shell" command: find { find: "test1", filter: { name: "coutamg1", age: 12.0 }, sort: { name: 1.0 }, $db: "test" } planSummary: IXSCAN { name: 1 } keysExamined:1 docsExamined:1 fromMultiPlanner:1 cursorExhausted:1 numYields:0 nreturned:1 reslen:154 locks:{ Global: { acquireCount: { r: 2 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 1 } } } protocol:op_msg 2ms